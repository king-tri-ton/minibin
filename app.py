# v3
import ctypes
import threading
import pystray
from pystray import MenuItem as item, Menu as menu
from PIL import Image
import base64
from io import BytesIO

def empty_recycle_bin(icon, item):
    # Определение функции из библиотеки shell32.dll
    SHEmptyRecycleBin = ctypes.windll.shell32.SHEmptyRecycleBinW

    # Флаги для функции SHEmptyRecycleBin:
    #   - SHERB_NOCONFIRMATION: не показывать окно подтверждения
    flags = 0x01  # 0x01 соответствует флагу SHERB_NOCONFIRMATION

    # Получение пути к корзине
    bin_path = ctypes.create_unicode_buffer(260)
    ctypes.windll.shell32.SHGetFolderPathW(0, 0x0005, 0, 0, bin_path)

    # Вызов функции для очистки корзины без диалогового окна
    result = SHEmptyRecycleBin(None, bin_path, flags)

    # Проверка результата выполнения
    if result == 0 or result == -2147418113:
        print("Корзина успешно очищена.")
    else:
        print("Произошла ошибка при очистке корзины. Код ошибки:", result)

def exit_program(icon, item):
    icon.stop()

def create_tray_icon():
    image_base64 = ""
    image_data = base64.b64decode(image_base64)
    image = Image.open(BytesIO(image_data))

    menu_options = (item("Очистить корзину", empty_recycle_bin), item("Выход", exit_program))
    tray_menu = menu(*menu_options)
    tray_icon = pystray.Icon("name", image, "Minibin by King Triton", tray_menu)
    return tray_icon

if __name__ == "__main__":
    tray_icon = create_tray_icon()
    tray_icon.run()
